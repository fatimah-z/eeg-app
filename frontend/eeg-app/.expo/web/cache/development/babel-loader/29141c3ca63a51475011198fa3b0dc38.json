{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from 'react-native-chart-kit';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setdata = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      firstarr = _useState4[0],\n      setfirstarr = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      x = _useState6[0],\n      setx = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      y = _useState8[0],\n      sety = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      secondarr = _useState10[0],\n      setsecondarr = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      loading = _useState12[0],\n      setisloading = _useState12[1];\n\n  var _useState13 = useState([1, 2, 3]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      arr = _useState14[0],\n      setarr = _useState14[1];\n\n  useEffect(function () {}, [loading]);\n\n  var show = function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('http://192.168.100.171:3000/view', {\n              method: 'GET'\n            }).then(function (response) {\n              return response.json();\n            }).then(function (response) {\n              setdata(response);\n              setfirstarr(response[0].arr1);\n              console.log(firstarr);\n              setsecondarr(response[1].arr2);\n              console.log(secondarr);\n            }).catch(function (err) {\n              console.log(err);\n            }).finally(function () {\n              setisloading(false);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var view = function _callee2() {\n    var response, resp, a1, a2, i;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch('http://10.113.60.251:3000/view', {\n              method: 'GET'\n            }));\n\n          case 3:\n            response = _context2.sent;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            resp = _context2.sent;\n            setdata(resp);\n            setfirstarr(resp[0].arr1);\n            console.log(firstarr);\n            setsecondarr(resp[1].arr2);\n            console.log(secondarr);\n            a1 = new Array();\n            a2 = new Array();\n\n            for (i = 0; i < firstarr.length; i++) {\n              console.log(firstarr[1]);\n              a1.push(Math.round((firstarr[i] + Number.EPSILON) * 10000) / 100);\n            }\n\n            setx(a1);\n            console.log(a1);\n\n            for (i = 0; i < secondarr.length; i++) {\n              a2.push(element = Math.round((secondarr[i] + Number.EPSILON) * 10000) / 10000);\n            }\n\n            sety(a2);\n            console.log(y);\n            _context2.next = 24;\n            break;\n\n          case 22:\n            _context2.prev = 22;\n            _context2.t0 = _context2[\"catch\"](0);\n\n          case 24:\n            _context2.prev = 24;\n            setisloading(false);\n            return _context2.finish(24);\n\n          case 27:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 22, 24, 27]], Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Button, {\n      title: \"show eeg signals\",\n      onPress: function onPress() {\n        return view();\n      }\n    }), !loading && secondarr != null && firstarr != null ? _jsx(Text, {\n      children: secondarr.length\n    }) : _jsx(Text, {\n      children: \"loading data....\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StatusBar","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","App","data","setdata","firstarr","setfirstarr","x","setx","y","sety","secondarr","setsecondarr","loading","setisloading","arr","setarr","show","fetch","method","then","response","json","arr1","console","log","arr2","catch","err","finally","view","resp","a1","Array","a2","i","length","push","Math","round","Number","EPSILON","element","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["E:/mne-app/frontend/eeg-app/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, Button} from 'react-native';\nimport { Dimensions } from 'react-native';\nimport {\n  LineChart,\n  BarChart,\n  PieChart,\n  ProgressChart,\n  ContributionGraph,\n  StackedBarChart\n} from 'react-native-chart-kit'\n\n// const show = ()=>{\n//   console.log('button clicked');\n//   fetch('http://192.168.43.137:3000/view',{method:'GET'})\n//   .then((response)=>response.json())\n//   .then((response)=>{\n//     setdata(response);\n//     console.log(data);\n//   });\n// };\nexport default function App() {\n  const[data,setdata] = useState({});\n  const[firstarr,setfirstarr] = useState([]);\n  const [x,setx] = useState([]);\n  const [y,sety] = useState([]);\n  const[secondarr,setsecondarr] = useState([]);\n  const[loading,setisloading] = useState(true);\n  const[arr,setarr]= useState([1,2,3])\n\n  useEffect(()=>{\n    \n  },[loading]);\n  const show = async () =>{\n    // console.log('button clicked');\n    await fetch('http://192.168.100.171:3000/view',{method:'GET'})\n    .then((response)=> response.json())\n    .then((response)=> {\n      setdata(response);\n      setfirstarr(response[0].arr1);\n      console.log(firstarr);\n      setsecondarr(response[1].arr2);\n     \n      console.log(secondarr);\n      \n      \n    })\n    .catch((err)=>{\n      console.log(err);\n    })\n    .finally(()=>{\n\n      setisloading(false);\n    })\n    \n    \n  };\n  const view = async ()=>{\n    try{\n      const response = await fetch('http://10.113.60.251:3000/view',{method:'GET'});\n      const resp = await  response.json();\n      setdata(resp);\n      setfirstarr(resp[0].arr1);\n      console.log(firstarr);\n      setsecondarr(resp[1].arr2);\n     \n      console.log(secondarr); \n      // console.log(resp[0].arr1);\n\n      var a1 = new Array();\n     var a2 = new Array();\n    //  firstarr.forEach(function(element){\n    //     console.log(firstarr[element]);\n    //     a1.push(Math.round((element+Number.EPSILON)*100)/100);\n        \n    //   });\n      for(var i=0;i< firstarr.length;i++){\n        console.log(firstarr[1]);\n        a1.push(Math.round((firstarr[i]+Number.EPSILON)*10000)/100);\n      }\n      setx(a1);\n      console.log(a1);\n      // secondarr.forEach((element)=>{\n      //   element=element/Math.pow(10,-5);\n      //   a2.push(element=Math.round((element+Number.EPSILON)*10000)/10000);\n      // });\n\n      for(var i=0;i<secondarr.length;i++){\n        a2.push(element=Math.round((secondarr[i]+Number.EPSILON)*10000)/10000);\n      }\n      sety(a2);\n      console.log(y);\n      \n    }\n    catch(error){\n\n    }\n    finally{\n     \n      setisloading(false);\n      \n    }\n  };\n  \n  return (\n    <View style={styles.container}>\n      {/* <Text >Open up App.js to start working on your app!</Text> */}\n      <Button\n      title='show eeg signals'\n      onPress={()=>view()}\n      />\n      {!loading && secondarr!=null && firstarr!=null? ( \n        <Text>{secondarr.length}</Text>\n\n  \n        \n\n\n\n  //   <LineChart \n  //   data={{\n  //     labels: firstarr,\n  //     datasets: [{\n  //       data: secondarr\n  //     }]\n  //   }}\n  //   width={Dimensions.get('window').width} // from react-native\n  //   height={500}\n  //   chartConfig={{\n  //     backgroundColor: '#F6DDCC',\n  //     backgroundGradientFrom: '#E74C3C  ',\n  //     backgroundGradientTo: '#EC7063',\n  //     decimalPlaces: 1, // optional, defaults to 2dp\n  //     withDots:false,\n  //     strokeWidth:2,\n  //     withInnerLines:false,\n  //     withOuterLines:false,\n  //     // withVerticalLabels:false,\n  //     yLabelsOffset:30,\n  //     xLabelsOffset: 15,\n  //     // withHorizontalLabels:false,\n  //     yAxisInterval:15,\n  //     withVerticalLines:false,\n  //     withHorizontalLines: false,\n  //     color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n  //     style: {\n  //       borderRadius: 16\n  //     }\n  //   }}\n  //   style={{\n  //     margin:20,\n  //     marginVertical: 8,\n  //     borderRadius: 16\n  //   }}\n  // />\n\n    //   <LineChart>\n    //     data={{\n    //       labels : {secondarr},\n    //       datasets : [{\n    //         data: {firstarr}\n    //       }]\n    //     }}\n    //      width={Dimensions.get('window').width} // from react-native\n    //   height={220}\n    //   chartConfig={{\n    //   backgroundColor: '#e26a00',\n    //   backgroundGradientFrom: '#fb8c00',\n    //   backgroundGradientTo: '#ffa726',\n    //   decimalPlaces: 2, // optional, defaults to 2dp\n    //   color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n    //   style: {\n    //     borderRadius: 16\n    //   }\n    // }}\n    // bezier\n    // style={{\n    //   marginVertical: 8,\n    //   borderRadius: 16\n    // }}\n    //   </LineChart>\n      ):<Text>loading data....</Text>}\n      {/* <StatusBar style=\"auto\" /> */}\n    </View>\n  );\n  \n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}