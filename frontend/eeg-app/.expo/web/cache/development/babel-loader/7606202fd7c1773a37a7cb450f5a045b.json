{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from 'react-native-chart-kit';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setdata = _useState2[1];\n\n  var _useState3 = useState(data[0]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      firstarr = _useState4[0],\n      setfirstarr = _useState4[1];\n\n  var _useState5 = useState(data[1]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      secondarr = _useState6[0],\n      setsecondarr = _useState6[1];\n\n  useEffect(function () {}, []);\n\n  var show = function _callee2() {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetch('http://192.168.100.171:3000/view', {\n              method: 'GET'\n            }).then(function _callee(response) {\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return _regeneratorRuntime.awrap(response.json());\n\n                    case 2:\n                      return _context.abrupt(\"return\", _context.sent);\n\n                    case 3:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }).then(function (response) {\n              setdata(response);\n              console.log(data);\n            }).catch(function (err) {}));\n\n          case 2:\n            return _context2.abrupt(\"return\", _jsx(LineChart, {\n              data: {\n                labels: {\n                  secondarr: secondarr\n                },\n                datasets: [{\n                  data: {\n                    firstarr: firstarr\n                  }\n                }]\n              },\n              width: Dimensions.get('window').width,\n              height: 220,\n              chartConfig: {\n                backgroundColor: '#e26a00',\n                backgroundGradientFrom: '#fb8c00',\n                backgroundGradientTo: '#ffa726',\n                decimalPlaces: 2,\n                color: function color() {\n                  var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n                  return \"rgba(255, 255, 255, \" + opacity + \")\";\n                },\n                style: {\n                  borderRadius: 16\n                }\n              },\n              bezier: true,\n              style: {\n                marginVertical: 8,\n                borderRadius: 16\n              }\n            }));\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Open up App.js to start working on your app!\"\n    }), _jsx(Button, {\n      title: \"show eeg signals\",\n      onPress: show\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StatusBar","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","App","data","setdata","firstarr","setfirstarr","secondarr","setsecondarr","show","fetch","method","then","response","json","console","log","catch","err","labels","datasets","Dimensions","get","width","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","style","borderRadius","marginVertical","styles","container","StyleSheet","create","flex","alignItems","justifyContent"],"sources":["E:/mne-app/frontend/eeg-app/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, Button} from 'react-native';\nimport {\n  LineChart,\n  BarChart,\n  PieChart,\n  ProgressChart,\n  ContributionGraph,\n  StackedBarChart\n} from 'react-native-chart-kit'\n\n// const show = ()=>{\n//   console.log('button clicked');\n//   fetch('http://192.168.43.137:3000/view',{method:'GET'})\n//   .then((response)=>response.json())\n//   .then((response)=>{\n//     setdata(response);\n//     console.log(data);\n//   });\n// };\nexport default function App() {\n  const[data,setdata] = useState({});\n  const[firstarr,setfirstarr] = useState(data[0]);\n  const[secondarr,setsecondarr] = useState(data[1]);\n\n  useEffect(()=>{\n    // fetch('http://192.168.100.171:3000/view',{method:'GET'})\n    // .then((response)=>response.json())\n    // .then((response)=>{\n    //   setdata(response);\n    //   console.log(data);\n    //   setfirstarr(data[0]);\n    //   console.log(firstarr);\n    //   setsecondarr(data[1]);\n    //   console.log(secondarr);\n    // });\n    // show();\n  },[]);\n  const show = async () =>{\n    // console.log('button clicked');\n    await fetch('http://192.168.100.171:3000/view',{method:'GET'})\n    .then(async(response)=> await  response.json())\n    .then((response)=> {\n      setdata(response);\n      console.log(data);\n      // if({data}!=null){\n      //   setfirstarr(data[0]);\n      // console.log(firstarr);\n      // setsecondarr(data[1]);\n      // console.log(secondarr);\n\n      // }\n\n      // setfirstarr(data[0]);\n      // console.log(firstarr);\n      // setsecondarr(data[1]);\n      // console.log(secondarr);\n    })\n    .catch(function(err){\n\n    })\n    return(\n      <LineChart\n        data={{\n          labels : {secondarr},\n          datasets : [{\n            data: {firstarr}\n          }]\n        }}\n    width={Dimensions.get('window').width} // from react-native\n    height={220}\n    chartConfig={{\n      backgroundColor: '#e26a00',\n      backgroundGradientFrom: '#fb8c00',\n      backgroundGradientTo: '#ffa726',\n      decimalPlaces: 2, // optional, defaults to 2dp\n      color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n      style: {\n        borderRadius: 16\n      }\n    }}\n    bezier\n    style={{\n      marginVertical: 8,\n      borderRadius: 16\n    }}\n    />\n    );\n  };\n  return (\n    <View style={styles.container}>\n      <Text >Open up App.js to start working on your app!</Text>\n      <Button\n      title='show eeg signals'\n      onPress={show}\n      />\n      {/* <LineChart>\n        data={{\n          labels : {secondarr},\n          datasets : [{\n            data: {firstarr}\n          }]\n        }}\n      </LineChart> */}\n      {/* <StatusBar style=\"auto\" /> */}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;;;AAEA,SACEC,SADF,EAEEC,QAFF,EAGEC,QAHF,EAIEC,aAJF,EAKEC,iBALF,EAMEC,eANF,QAOO,wBAPP;;;AAkBA,eAAe,SAASC,GAAT,GAAe;EAC5B,gBAAsBT,QAAQ,CAAC,EAAD,CAA9B;EAAA;EAAA,IAAMU,IAAN;EAAA,IAAWC,OAAX;;EACA,iBAA8BX,QAAQ,CAACU,IAAI,CAAC,CAAD,CAAL,CAAtC;EAAA;EAAA,IAAME,QAAN;EAAA,IAAeC,WAAf;;EACA,iBAAgCb,QAAQ,CAACU,IAAI,CAAC,CAAD,CAAL,CAAxC;EAAA;EAAA,IAAMI,SAAN;EAAA,IAAgBC,YAAhB;;EAEAd,SAAS,CAAC,YAAI,CAYb,CAZQ,EAYP,EAZO,CAAT;;EAaA,IAAMe,IAAI,GAAG;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCAELC,KAAK,CAAC,kCAAD,EAAoC;cAACC,MAAM,EAAC;YAAR,CAApC,CAAL,CACLC,IADK,CACA,iBAAMC,QAAN;cAAA;gBAAA;kBAAA;oBAAA;sBAAA;sBAAA,iCAAyBA,QAAQ,CAACC,IAAT,EAAzB;;oBAAA;sBAAA;;oBAAA;oBAAA;sBAAA;kBAAA;gBAAA;cAAA;YAAA,CADA,EAELF,IAFK,CAEA,UAACC,QAAD,EAAa;cACjBT,OAAO,CAACS,QAAD,CAAP;cACAE,OAAO,CAACC,GAAR,CAAYb,IAAZ;YAaD,CAjBK,EAkBLc,KAlBK,CAkBC,UAASC,GAAT,EAAa,CAEnB,CApBK,CAFK;;UAAA;YAAA,kCAwBT,KAAC,SAAD;cACE,IAAI,EAAE;gBACJC,MAAM,EAAG;kBAACZ,SAAS,EAATA;gBAAD,CADL;gBAEJa,QAAQ,EAAG,CAAC;kBACVjB,IAAI,EAAE;oBAACE,QAAQ,EAARA;kBAAD;gBADI,CAAD;cAFP,CADR;cAOF,KAAK,EAAEgB,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAP9B;cAQF,MAAM,EAAE,GARN;cASF,WAAW,EAAE;gBACXC,eAAe,EAAE,SADN;gBAEXC,sBAAsB,EAAE,SAFb;gBAGXC,oBAAoB,EAAE,SAHX;gBAIXC,aAAa,EAAE,CAJJ;gBAKXC,KAAK,EAAE;kBAAA,IAACC,OAAD,uEAAW,CAAX;kBAAA,gCAAwCA,OAAxC;gBAAA,CALI;gBAMXC,KAAK,EAAE;kBACLC,YAAY,EAAE;gBADT;cANI,CATX;cAmBF,MAAM,MAnBJ;cAoBF,KAAK,EAAE;gBACLC,cAAc,EAAE,CADX;gBAELD,YAAY,EAAE;cAFT;YApBL,EAxBS;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAb;;EAmDA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEE,MAAM,CAACC,SAApB;IAAA,WACE,KAAC,IAAD;MAAA;IAAA,EADF,EAEE,KAAC,MAAD;MACA,KAAK,EAAC,kBADN;MAEA,OAAO,EAAEzB;IAFT,EAFF;EAAA,EADF;AAkBD;AAED,IAAMwB,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;EAC/BF,SAAS,EAAE;IACTG,IAAI,EAAE,CADG;IAETb,eAAe,EAAE,MAFR;IAGTc,UAAU,EAAE,QAHH;IAITC,cAAc,EAAE;EAJP;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}