{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport DropDownPicker from \"react-native-dropdown-picker\";\nimport EEGData from \"../assets/images/EEGdata.png\";\nimport Background from \"../assets/images/background.png\";\nimport Done from \"../assets/images/done.png\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setdata = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      firstarr = _useState4[0],\n      setfirstarr = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      x = _useState6[0],\n      setx = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      y = _useState8[0],\n      sety = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      secondarr = _useState10[0],\n      setsecondarr = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      loading = _useState12[0],\n      setisloading = _useState12[1];\n\n  var _useState13 = useState([1, 2, 3]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      arr = _useState14[0],\n      setarr = _useState14[1];\n\n  useEffect(function () {}, []);\n\n  var onAnalyze = function onAnalyze() {\n    navigation.navigate(\"Analyze\");\n  };\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      open = _useState16[0],\n      setOpen = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      value = _useState18[0],\n      setValue = _useState18[1];\n\n  var _useState19 = useState([{\n    label: \"CSV\",\n    value: \"csv\"\n  }, {\n    label: \"TXT\",\n    value: \"txt\"\n  }]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      items = _useState20[0],\n      setItems = _useState20[1];\n\n  var view = function _callee() {\n    var response, resp;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('http://192.168.100.171:3000/view', {\n              method: 'GET'\n            }));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            resp = _context.sent;\n            setdata(resp);\n            setfirstarr(resp[0].arr1);\n            console.log(firstarr);\n            setsecondarr(resp[1].arr2);\n            console.log(secondarr);\n            _context.next = 16;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 16:\n            _context.prev = 16;\n            setisloading(false);\n            return _context.finish(16);\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 14, 16, 19]], Promise);\n  };\n\n  return _jsx(View, {\n    style: Styles.container\n  });\n}\nvar Styles = StyleSheet.create({\n  loginBtn: {\n    width: \"80%\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#BB005E\"\n  },\n  doneimg: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    margin: \"1%\",\n    width: \"13%\",\n    height: \"180%\"\n  },\n  image: {\n    flex: 1,\n    justifyContent: \"center\",\n    height: \"100%\",\n    width: \"100%\"\n  },\n  container: {\n    backgroundColor: \"#FFFFFF\",\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100%\"\n  },\n  innerContainer: {\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    marginTop: \"72%\"\n  },\n  txt: {\n    color: \"#264CE3\",\n    fontSize: 17,\n    fontWeight: \"bold\",\n    textDecorationLine: \"underline\"\n  },\n  uploadtxt: {\n    color: \"#264CE3\",\n    fontSize: 17,\n    fontWeight: \"bold\",\n    textDecorationLine: \"underline\"\n  },\n  statusContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  statusUploadContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: \"3%\"\n  },\n  analyzebtn: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: \"9%\"\n  },\n  loginText: {\n    color: \"#FFFFFF\"\n  },\n  eegdataimg: {\n    width: \"109%\",\n    height: \"300%\",\n    marginTop: \"24%\"\n  },\n  eegimgdiv: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  selectfiles: {\n    borderBottomWidth: 2\n  }\n});","map":{"version":3,"names":["StatusBar","React","useState","useEffect","DropDownPicker","EEGData","Background","Done","App","navigation","data","setdata","firstarr","setfirstarr","x","setx","y","sety","secondarr","setsecondarr","loading","setisloading","arr","setarr","onAnalyze","navigate","open","setOpen","value","setValue","label","items","setItems","view","fetch","method","response","json","resp","arr1","console","log","arr2","Styles","container","StyleSheet","create","loginBtn","width","borderRadius","height","alignItems","justifyContent","backgroundColor","doneimg","flexDirection","margin","image","flex","innerContainer","marginTop","txt","color","fontSize","fontWeight","textDecorationLine","uploadtxt","statusContainer","statusUploadContainer","analyzebtn","loginText","eegdataimg","eegimgdiv","selectfiles","borderBottomWidth"],"sources":["E:/mne-app/frontend/eeg-app/screens/analyze.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TextInput,\r\n  Button,\r\n  TouchableOpacity,\r\n  ImageBackground,\r\n} from \"react-native\";\r\nimport DropDownPicker from \"react-native-dropdown-picker\";\r\nimport EEGData from \"../assets/images/EEGdata.png\";\r\nimport Background from \"../assets/images/background.png\";\r\nimport Done from \"../assets/images/done.png\";\r\n\r\nexport default function App({ navigation }) {\r\n  const[data,setdata] = useState({});\r\n  const[firstarr,setfirstarr] = useState([]);\r\n  const [x,setx] = useState([]);\r\n  const [y,sety] = useState([]);\r\n  const[secondarr,setsecondarr] = useState([]);\r\n  const[loading,setisloading] = useState(true);\r\n  const[arr,setarr]= useState([1,2,3])\r\n\r\n  useEffect(()=>{\r\n    \r\n  },[]);\r\n  const onAnalyze = () => {\r\n    navigation.navigate(\"Analyze\");\r\n  };\r\n  const [open, setOpen] = useState(false);\r\n  const [value, setValue] = useState(null);\r\n  const [items, setItems] = useState([\r\n    { label: \"CSV\", value: \"csv\" },\r\n    { label: \"TXT\", value: \"txt\" },\r\n  ]);\r\n  const view = async ()=>{\r\n    try{\r\n      const response = await fetch('http://192.168.100.171:3000/view',{method:'GET'});\r\n      const resp = await  response.json();\r\n      setdata(resp);\r\n      setfirstarr(resp[0].arr1);\r\n      console.log(firstarr);\r\n      setsecondarr(resp[1].arr2);\r\n     \r\n      console.log(secondarr); \r\n      // console.log(resp[0].arr1);\r\n      \r\n    }\r\n    catch(error){\r\n\r\n    }\r\n    finally{\r\n     \r\n      setisloading(false);\r\n      \r\n    }\r\n  };\r\n  return (\r\n    <View style={Styles.container}>\r\n      {/* <ImageBackground\r\n        source={Background}\r\n        resizeMode=\"cover\"\r\n        style={Styles.image}\r\n      >\r\n        <View style={Styles.eegimgdiv}>\r\n          <Image style={Styles.eegdataimg} source={EEGData}></Image>\r\n        </View>\r\n\r\n       \r\n\r\n        <View style={Styles.innerContainer}>\r\n          <View style={Styles.statusContainer}>\r\n            <Text style={Styles.txt}>Status:</Text>\r\n          </View>\r\n          <View style={Styles.statusUploadContainer}>\r\n            <Image source={Done} style={Styles.doneimg}></Image>\r\n            <Text style={Styles.uploadtxt}>EEG Data Analyzed</Text>\r\n          </View>\r\n          <View style={Styles.analyzebtn}>\r\n            <TouchableOpacity style={Styles.loginBtn} onPress={onAnalyze}>\r\n              <Text style={Styles.loginText}>Analyze EEG Data</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </ImageBackground> */}\r\n\r\n{/* //     <Button\r\n  //     title='show eeg signals'\r\n  //     onPress={()=>view()}\r\n  //     />\r\n\r\n  //     { !loading && secondarr!=null && firstarr!=null && x!=null && y!=null? ( \r\n   \r\n  //   <LineChart \r\n  //   data={{\r\n  //     labels: firstarr.map(element=>\r\n  //       Math.round(element*100)/100\r\n  //     ),\r\n  //     datasets: [{\r\n  //       data: secondarr.map(element=>\r\n  //         element/Math.pow(10,-11)\r\n  //       )\r\n  //     }]\r\n  //   }}\r\n  //   width={Dimensions.get('window').width} // from react-native\r\n  //   height={500}\r\n  //   chartConfig={{\r\n  //     backgroundColor: '#F6DDCC',\r\n  //     backgroundGradientFrom: '#E74C3C  ',\r\n  //     backgroundGradientTo: '#EC7063',\r\n  //     //decimalPlaces: 1, // optional, defaults to 2dp\r\n  //     withDots:false,\r\n  //     strokeWidth:2,\r\n  //     withInnerLines:false,\r\n  //     withOuterLines:false,\r\n  //     xLabelsOffset: 10,\r\n  //     withVerticalLines:false,\r\n  //     withHorizontalLines: false,\r\n  //     horizontalLabelRotation:30,\r\n  //     verticalLabelRotation:30,\r\n  //     color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n  //     style: {\r\n  //       borderRadius: 16\r\n  //     }\r\n  //   }}\r\n  //   style={{\r\n  //     margin:20,\r\n  //     marginVertical: 8,\r\n  //     borderRadius: 16,\r\n  //     flex:1\r\n  //   }}\r\n  // />\r\n\r\n\r\n  //     ):<Text>loading data....</Text>} */}\r\n    </View>\r\n  );\r\n}\r\nconst Styles = StyleSheet.create({\r\n  loginBtn: {\r\n    width: \"80%\",\r\n    borderRadius: 25,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n\r\n    backgroundColor: \"#BB005E\",\r\n  },\r\n  doneimg: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    margin: \"1%\",\r\n    width: \"13%\",\r\n    height: \"180%\",\r\n  },\r\n  image: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    backgroundColor: \"#FFFFFF\",\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"100%\",\r\n  },\r\n  innerContainer: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    marginTop: \"72%\",\r\n  },\r\n  txt: {\r\n    color: \"#264CE3\",\r\n    fontSize: 17,\r\n    fontWeight: \"bold\",\r\n    textDecorationLine: \"underline\",\r\n  },\r\n  uploadtxt: {\r\n    color: \"#264CE3\",\r\n    fontSize: 17,\r\n    fontWeight: \"bold\",\r\n    textDecorationLine: \"underline\",\r\n  },\r\n  statusContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  statusUploadContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: \"3%\",\r\n  },\r\n\r\n  analyzebtn: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: \"9%\",\r\n  },\r\n  loginText: {\r\n    color: \"#FFFFFF\",\r\n  },\r\n\r\n  eegdataimg: { width: \"109%\", height: \"300%\", marginTop: \"24%\" },\r\n  eegimgdiv: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  selectfiles: {\r\n    borderBottomWidth: 2,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}