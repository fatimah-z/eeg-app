{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from 'react-native-chart-kit';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setdata = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      firstarr = _useState4[0],\n      setfirstarr = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      secondarr = _useState6[0],\n      setsecondarr = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setisloading = _useState8[1];\n\n  var _useState9 = useState([1, 2, 3]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      arr = _useState10[0],\n      setarr = _useState10[1];\n\n  useEffect(function () {}, [loading]);\n\n  var show = function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('http://192.168.100.171:3000/view', {\n              method: 'GET'\n            }).then(function (response) {\n              return response.json();\n            }).then(function (response) {\n              setdata(response);\n              setfirstarr(resp[0].arr1);\n              console.log(firstarr);\n              setsecondarr(resp[1].arr2);\n              console.log(secondarr);\n            }).catch(function (err) {\n              console.log(err);\n            }).finally(function () {\n              setisloading(false);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var view = function _callee2() {\n    var response, _resp;\n\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch('http://192.168.100.171:3000/view', {\n              method: 'GET'\n            }));\n\n          case 3:\n            response = _context2.sent;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            _resp = _context2.sent;\n            setdata(_resp);\n            setfirstarr(_resp[0].arr1);\n            console.log(firstarr);\n            setsecondarr(_resp[1].arr2);\n            console.log(secondarr);\n            _context2.next = 16;\n            break;\n\n          case 14:\n            _context2.prev = 14;\n            _context2.t0 = _context2[\"catch\"](0);\n\n          case 16:\n            _context2.prev = 16;\n            setisloading(false);\n            return _context2.finish(16);\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 14, 16, 19]], Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Open up App.js to start working on your app!\"\n    }), _jsx(Button, {\n      title: \"show eeg signals\",\n      onPress: function onPress() {\n        return view();\n      }\n    }), !loading && secondarr != null && firstarr != null ? _jsx(LineChart, {\n      data: {\n        labels: {\n          firstarr: firstarr\n        },\n        datasets: [{\n          data: {\n            secondarr: secondarr\n          }\n        }]\n      },\n      width: Dimensions.get('window').width,\n      height: 220,\n      chartConfig: {\n        backgroundColor: '#e26a00',\n        backgroundGradientFrom: '#fb8c00',\n        backgroundGradientTo: '#ffa726',\n        decimalPlaces: 2,\n        color: function color() {\n          var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n          return \"rgba(255, 255, 255, \" + opacity + \")\";\n        },\n        style: {\n          borderRadius: 16\n        }\n      },\n      style: {\n        marginVertical: 8,\n        borderRadius: 16\n      }\n    }) : _jsx(Text, {\n      children: \"loading data....\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StatusBar","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","App","data","setdata","firstarr","setfirstarr","secondarr","setsecondarr","loading","setisloading","arr","setarr","show","fetch","method","then","response","json","resp","arr1","console","log","arr2","catch","err","finally","view","styles","container","labels","datasets","Dimensions","get","width","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","style","borderRadius","marginVertical","StyleSheet","create","flex","alignItems","justifyContent"],"sources":["E:/mne-app/frontend/eeg-app/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, Button} from 'react-native';\nimport { Dimensions } from 'react-native';\nimport {\n  LineChart,\n  BarChart,\n  PieChart,\n  ProgressChart,\n  ContributionGraph,\n  StackedBarChart\n} from 'react-native-chart-kit'\n\n// const show = ()=>{\n//   console.log('button clicked');\n//   fetch('http://192.168.43.137:3000/view',{method:'GET'})\n//   .then((response)=>response.json())\n//   .then((response)=>{\n//     setdata(response);\n//     console.log(data);\n//   });\n// };\nexport default function App() {\n  const[data,setdata] = useState({});\n  const[firstarr,setfirstarr] = useState(null);\n  const[secondarr,setsecondarr] = useState(null);\n  const[loading,setisloading] = useState(true);\n  const[arr,setarr]= useState([1,2,3])\n\n  useEffect(()=>{\n    \n  },[loading]);\n  const show = async () =>{\n    // console.log('button clicked');\n    await fetch('http://192.168.100.171:3000/view',{method:'GET'})\n    .then((response)=> response.json())\n    .then((response)=> {\n      setdata(response);\n      setfirstarr(resp[0].arr1);\n      console.log(firstarr);\n      setsecondarr(resp[1].arr2);\n     \n      console.log(secondarr);\n      \n      \n    })\n    .catch((err)=>{\n      console.log(err);\n    })\n    .finally(()=>{\n\n      setisloading(false);\n    })\n    \n    \n  };\n  const view = async ()=>{\n    try{\n      const response = await fetch('http://192.168.100.171:3000/view',{method:'GET'});\n      const resp = await  response.json();\n      setdata(resp);\n      setfirstarr(resp[0].arr1);\n      console.log(firstarr);\n      setsecondarr(resp[1].arr2);\n     \n      console.log(secondarr);\n      \n    }\n    catch(error){\n\n    }\n    finally{\n      setisloading(false);\n      \n    }\n  };\n  \n  return (\n    <View style={styles.container}>\n      <Text >Open up App.js to start working on your app!</Text>\n      <Button\n      title='show eeg signals'\n      onPress={()=>view()}\n      />\n      {!loading && secondarr!=null && firstarr!=null? ( \n        //<Text>{secondarr}</Text>\n\n  \n\n\n\n\n    <LineChart\n    data={{\n      labels: {firstarr},\n      datasets: [{\n        data: {secondarr}\n      }]\n    }}\n    width={Dimensions.get('window').width} // from react-native\n    height={220}\n    chartConfig={{\n      backgroundColor: '#e26a00',\n      backgroundGradientFrom: '#fb8c00',\n      backgroundGradientTo: '#ffa726',\n      decimalPlaces: 2, // optional, defaults to 2dp\n      color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n      style: {\n        borderRadius: 16\n      }\n    }}\n    style={{\n      marginVertical: 8,\n      borderRadius: 16\n    }}\n  />\n\n    //   <LineChart>\n    //     data={{\n    //       labels : {secondarr},\n    //       datasets : [{\n    //         data: {firstarr}\n    //       }]\n    //     }}\n    //      width={Dimensions.get('window').width} // from react-native\n    //   height={220}\n    //   chartConfig={{\n    //   backgroundColor: '#e26a00',\n    //   backgroundGradientFrom: '#fb8c00',\n    //   backgroundGradientTo: '#ffa726',\n    //   decimalPlaces: 2, // optional, defaults to 2dp\n    //   color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n    //   style: {\n    //     borderRadius: 16\n    //   }\n    // }}\n    // bezier\n    // style={{\n    //   marginVertical: 8,\n    //   borderRadius: 16\n    // }}\n    //   </LineChart>\n      ):<Text>loading data....</Text>}\n      {/* <StatusBar style=\"auto\" /> */}\n    </View>\n  );\n  \n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;;;;AAGA,SACEC,SADF,EAEEC,QAFF,EAGEC,QAHF,EAIEC,aAJF,EAKEC,iBALF,EAMEC,eANF,QAOO,wBAPP;;;AAkBA,eAAe,SAASC,GAAT,GAAe;EAC5B,gBAAsBT,QAAQ,CAAC,EAAD,CAA9B;EAAA;EAAA,IAAMU,IAAN;EAAA,IAAWC,OAAX;;EACA,iBAA8BX,QAAQ,CAAC,IAAD,CAAtC;EAAA;EAAA,IAAMY,QAAN;EAAA,IAAeC,WAAf;;EACA,iBAAgCb,QAAQ,CAAC,IAAD,CAAxC;EAAA;EAAA,IAAMc,SAAN;EAAA,IAAgBC,YAAhB;;EACA,iBAA8Bf,QAAQ,CAAC,IAAD,CAAtC;EAAA;EAAA,IAAMgB,OAAN;EAAA,IAAcC,YAAd;;EACA,iBAAmBjB,QAAQ,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAD,CAA3B;EAAA;EAAA,IAAMkB,GAAN;EAAA,IAAUC,MAAV;;EAEAlB,SAAS,CAAC,YAAI,CAEb,CAFQ,EAEP,CAACe,OAAD,CAFO,CAAT;;EAGA,IAAMI,IAAI,GAAG;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCAELC,KAAK,CAAC,kCAAD,EAAoC;cAACC,MAAM,EAAC;YAAR,CAApC,CAAL,CACLC,IADK,CACA,UAACC,QAAD;cAAA,OAAaA,QAAQ,CAACC,IAAT,EAAb;YAAA,CADA,EAELF,IAFK,CAEA,UAACC,QAAD,EAAa;cACjBb,OAAO,CAACa,QAAD,CAAP;cACAX,WAAW,CAACa,IAAI,CAAC,CAAD,CAAJ,CAAQC,IAAT,CAAX;cACAC,OAAO,CAACC,GAAR,CAAYjB,QAAZ;cACAG,YAAY,CAACW,IAAI,CAAC,CAAD,CAAJ,CAAQI,IAAT,CAAZ;cAEAF,OAAO,CAACC,GAAR,CAAYf,SAAZ;YAGD,CAXK,EAYLiB,KAZK,CAYC,UAACC,GAAD,EAAO;cACZJ,OAAO,CAACC,GAAR,CAAYG,GAAZ;YACD,CAdK,EAeLC,OAfK,CAeG,YAAI;cAEXhB,YAAY,CAAC,KAAD,CAAZ;YACD,CAlBK,CAFK;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAb;;EAwBA,IAAMiB,IAAI,GAAG;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,iCAEcb,KAAK,CAAC,kCAAD,EAAoC;cAACC,MAAM,EAAC;YAAR,CAApC,CAFnB;;UAAA;YAEHE,QAFG;YAAA;YAAA,iCAGWA,QAAQ,CAACC,IAAT,EAHX;;UAAA;YAGHC,KAHG;YAITf,OAAO,CAACe,KAAD,CAAP;YACAb,WAAW,CAACa,KAAI,CAAC,CAAD,CAAJ,CAAQC,IAAT,CAAX;YACAC,OAAO,CAACC,GAAR,CAAYjB,QAAZ;YACAG,YAAY,CAACW,KAAI,CAAC,CAAD,CAAJ,CAAQI,IAAT,CAAZ;YAEAF,OAAO,CAACC,GAAR,CAAYf,SAAZ;YATS;YAAA;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAgBTG,YAAY,CAAC,KAAD,CAAZ;YAhBS;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAb;;EAqBA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEkB,MAAM,CAACC,SAApB;IAAA,WACE,KAAC,IAAD;MAAA;IAAA,EADF,EAEE,KAAC,MAAD;MACA,KAAK,EAAC,kBADN;MAEA,OAAO,EAAE;QAAA,OAAIF,IAAI,EAAR;MAAA;IAFT,EAFF,EAMG,CAAClB,OAAD,IAAYF,SAAS,IAAE,IAAvB,IAA+BF,QAAQ,IAAE,IAAzC,GAQH,KAAC,SAAD;MACA,IAAI,EAAE;QACJyB,MAAM,EAAE;UAACzB,QAAQ,EAARA;QAAD,CADJ;QAEJ0B,QAAQ,EAAE,CAAC;UACT5B,IAAI,EAAE;YAACI,SAAS,EAATA;UAAD;QADG,CAAD;MAFN,CADN;MAOA,KAAK,EAAEyB,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAPhC;MAQA,MAAM,EAAE,GARR;MASA,WAAW,EAAE;QACXC,eAAe,EAAE,SADN;QAEXC,sBAAsB,EAAE,SAFb;QAGXC,oBAAoB,EAAE,SAHX;QAIXC,aAAa,EAAE,CAJJ;QAKXC,KAAK,EAAE;UAAA,IAACC,OAAD,uEAAW,CAAX;UAAA,gCAAwCA,OAAxC;QAAA,CALI;QAMXC,KAAK,EAAE;UACLC,YAAY,EAAE;QADT;MANI,CATb;MAmBA,KAAK,EAAE;QACLC,cAAc,EAAE,CADX;QAELD,YAAY,EAAE;MAFT;IAnBP,EARG,GA0DC,KAAC,IAAD;MAAA;IAAA,EAhEJ;EAAA,EADF;AAsED;AAED,IAAMd,MAAM,GAAGgB,UAAU,CAACC,MAAX,CAAkB;EAC/BhB,SAAS,EAAE;IACTiB,IAAI,EAAE,CADG;IAETX,eAAe,EAAE,MAFR;IAGTY,UAAU,EAAE,QAHH;IAITC,cAAc,EAAE;EAJP;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}