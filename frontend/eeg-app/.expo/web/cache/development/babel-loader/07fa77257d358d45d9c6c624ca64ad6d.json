{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from 'react-native-chart-kit';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setdata = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      firstarr = _useState4[0],\n      setfirstarr = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      secondarr = _useState6[0],\n      setsecondarr = _useState6[1];\n\n  useEffect(function () {\n    show();\n  }, []);\n\n  var show = function _callee2() {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetch('http://192.168.100.171:3000/view', {\n              method: 'GET'\n            }).then(function (response) {\n              return response.json();\n            }).then(function _callee(response) {\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      setdata(response);\n                      console.log(data);\n                      setfirstarr(data[0]);\n                      console.log(firstarr);\n                      setsecondarr(data[1]);\n                      console.log(secondarr);\n\n                    case 6:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Open up App.js to start working on your app!\"\n    }), _jsx(Button, {\n      title: \"show eeg signals\"\n    }), _jsxs(LineChart, {\n      children: [\"data=\", {\n        labels: {\n          secondarr: secondarr\n        },\n        datasets: [{\n          data: {\n            firstarr: firstarr\n          }\n        }]\n      }]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StatusBar","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","App","data","setdata","firstarr","setfirstarr","secondarr","setsecondarr","show","fetch","method","then","response","json","console","log","styles","container","labels","datasets","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["E:/mne-app/frontend/eeg-app/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, Button} from 'react-native';\nimport {\n  LineChart,\n  BarChart,\n  PieChart,\n  ProgressChart,\n  ContributionGraph,\n  StackedBarChart\n} from 'react-native-chart-kit'\n\n// const show = ()=>{\n//   console.log('button clicked');\n//   fetch('http://192.168.43.137:3000/view',{method:'GET'})\n//   .then((response)=>response.json())\n//   .then((response)=>{\n//     setdata(response);\n//     console.log(data);\n//   });\n// };\nexport default function App() {\n  const[data,setdata] = useState([]);\n  const[firstarr,setfirstarr] = useState([]);\n  const[secondarr,setsecondarr] = useState([]);\n\n  useEffect(()=>{\n    // await fetch('http://192.168.100.171:3000/view',{method:'GET'})\n    // .then((response)=>response.json())\n    // .then((response)=>{\n    //   setdata(response);\n    //   console.log(data);\n    //   setfirstarr(data[0]);\n    //   console.log(firstarr);\n    //   setsecondarr(data[1]);\n    //   console.log(secondarr);\n    // });\n    show();\n  },[]);\n  const  show = async ()=>{\n    // console.log('button clicked');\n    await fetch('http://192.168.100.171:3000/view',{method:'GET'})\n    .then((response)=>response.json())\n    .then(async (response)=>{\n      setdata(response);\n      console.log(data);\n      setfirstarr(data[0]);\n      console.log(firstarr);\n      setsecondarr(data[1]);\n      console.log(secondarr);\n    });\n  };\n  return (\n    <View style={styles.container}>\n      <Text >Open up App.js to start working on your app!</Text>\n      <Button\n      title='show eeg signals'\n      // onPress={show}\n      />\n      <LineChart>\n        data={{\n          labels : {secondarr},\n          datasets : [{\n            data: {firstarr}\n          }]\n        }}\n      </LineChart>\n      {/* <StatusBar style=\"auto\" /> */}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;;;AAEA,SACEC,SADF,EAEEC,QAFF,EAGEC,QAHF,EAIEC,aAJF,EAKEC,iBALF,EAMEC,eANF,QAOO,wBAPP;;;AAkBA,eAAe,SAASC,GAAT,GAAe;EAC5B,gBAAsBT,QAAQ,CAAC,EAAD,CAA9B;EAAA;EAAA,IAAMU,IAAN;EAAA,IAAWC,OAAX;;EACA,iBAA8BX,QAAQ,CAAC,EAAD,CAAtC;EAAA;EAAA,IAAMY,QAAN;EAAA,IAAeC,WAAf;;EACA,iBAAgCb,QAAQ,CAAC,EAAD,CAAxC;EAAA;EAAA,IAAMc,SAAN;EAAA,IAAgBC,YAAhB;;EAEAd,SAAS,CAAC,YAAI;IAWZe,IAAI;EACL,CAZQ,EAYP,EAZO,CAAT;;EAaA,IAAOA,IAAI,GAAG;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCAENC,KAAK,CAAC,kCAAD,EAAoC;cAACC,MAAM,EAAC;YAAR,CAApC,CAAL,CACLC,IADK,CACA,UAACC,QAAD;cAAA,OAAYA,QAAQ,CAACC,IAAT,EAAZ;YAAA,CADA,EAELF,IAFK,CAEA,iBAAOC,QAAP;cAAA;gBAAA;kBAAA;oBAAA;sBACJT,OAAO,CAACS,QAAD,CAAP;sBACAE,OAAO,CAACC,GAAR,CAAYb,IAAZ;sBACAG,WAAW,CAACH,IAAI,CAAC,CAAD,CAAL,CAAX;sBACAY,OAAO,CAACC,GAAR,CAAYX,QAAZ;sBACAG,YAAY,CAACL,IAAI,CAAC,CAAD,CAAL,CAAZ;sBACAY,OAAO,CAACC,GAAR,CAAYT,SAAZ;;oBANI;oBAAA;sBAAA;kBAAA;gBAAA;cAAA;YAAA,CAFA,CAFM;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAd;;EAaA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEU,MAAM,CAACC,SAApB;IAAA,WACE,KAAC,IAAD;MAAA;IAAA,EADF,EAEE,KAAC,MAAD;MACA,KAAK,EAAC;IADN,EAFF,EAME,MAAC,SAAD;MAAA,oBACQ;QACJC,MAAM,EAAG;UAACZ,SAAS,EAATA;QAAD,CADL;QAEJa,QAAQ,EAAG,CAAC;UACVjB,IAAI,EAAE;YAACE,QAAQ,EAARA;UAAD;QADI,CAAD;MAFP,CADR;IAAA,EANF;EAAA,EADF;AAkBD;AAED,IAAMY,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;EAC/BJ,SAAS,EAAE;IACTK,IAAI,EAAE,CADG;IAETC,eAAe,EAAE,MAFR;IAGTC,UAAU,EAAE,QAHH;IAITC,cAAc,EAAE;EAJP;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}