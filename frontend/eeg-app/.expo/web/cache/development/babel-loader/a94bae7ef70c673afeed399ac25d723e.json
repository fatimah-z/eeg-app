{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Stack } from \"react-native-web/dist/index\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nimport Navigator from \"./stack/appstack\";\nimport { accessToken, login, refreshToken } from \"./auth/auth\";\nimport \"react-native-gesture-handler\";\nimport { isLoggedIn } from \"react-native-axios-jwt\";\nimport SignupScreen from \"./screens/signup\";\nimport LoginScreen from \"./screens/login\";\nimport DataImportScreen from \"./screens/dataimportoptions\";\nimport HeadsetScreen from \"./screens/connectheadset\";\nimport ImportScreen from \"./screens/importeegdata\";\nimport UploadScreen from \"./screens/uploadeeg\";\nimport AnalyzeScreen from \"./screens/analyze\";\nimport ClassifyScreen from \"./screens/classify\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport PatientHistory from \"./screens/patienthistory\";\nimport ReportGeneration from \"./screens/reportgeneration\";\nimport AuthContext from \"./auth/authContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setdata = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      firstarr = _useState4[0],\n      setfirstarr = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      x = _useState6[0],\n      setx = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      y = _useState8[0],\n      sety = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      secondarr = _useState10[0],\n      setsecondarr = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      loading = _useState12[0],\n      setisloading = _useState12[1];\n\n  var _useState13 = useState([1, 2, 3]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      arr = _useState14[0],\n      setarr = _useState14[1];\n\n  var Stack = createStackNavigator();\n\n  var _useState15 = useState(true),\n      _useState16 = _slicedToArray(_useState15, 2),\n      signedIn = _useState16[0],\n      setSignedIn = _useState16[1];\n\n  useEffect(function () {\n    isLoggedIn().then(function (status) {\n      setSignedIn(status);\n    });\n  }, []);\n\n  var show = function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"http://192.168.100.171:3000/view\", {\n              method: \"GET\"\n            }).then(function (response) {\n              return response.json();\n            }).then(function (response) {\n              setdata(response);\n              setfirstarr(response[0].arr1);\n              console.log(firstarr);\n              setsecondarr(response[1].arr2);\n              console.log(secondarr);\n            }).catch(function (err) {\n              console.log(err);\n            }).finally(function () {\n              setisloading(false);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var view = function _callee2() {\n    var response, resp;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"http://192.168.100.171:3000/view\", {\n              method: \"GET\"\n            }));\n\n          case 3:\n            response = _context2.sent;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            resp = _context2.sent;\n            setdata(resp);\n            setfirstarr(resp[0].arr1);\n            console.log(firstarr);\n            setsecondarr(resp[1].arr2);\n            console.log(secondarr);\n            _context2.next = 16;\n            break;\n\n          case 14:\n            _context2.prev = 14;\n            _context2.t0 = _context2[\"catch\"](0);\n\n          case 16:\n            _context2.prev = 16;\n            setisloading(false);\n            return _context2.finish(16);\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 14, 16, 19]], Promise);\n  };\n\n  var refine = function _callee3() {\n    var a1, a2, i;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            a1 = new Array();\n            a2 = new Array();\n\n            for (i = 0; i < firstarr.length; i++) {\n              a1.push(Math.round((firstarr[i] + Number.EPSILON) * 10000) / 10000);\n            }\n\n            setx(a1);\n\n            for (i = 0; i < secondarr.length; i++) {\n              a2.push(secondarr[i] / Math.pow(10, -12));\n            }\n\n            sety(a2);\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(AnalyzeScreen, {});\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StatusBar","Stack","createStackNavigator","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","Navigator","accessToken","login","refreshToken","isLoggedIn","SignupScreen","LoginScreen","DataImportScreen","HeadsetScreen","ImportScreen","UploadScreen","AnalyzeScreen","ClassifyScreen","NavigationContainer","PatientHistory","ReportGeneration","AuthContext","App","data","setdata","firstarr","setfirstarr","x","setx","y","sety","secondarr","setsecondarr","loading","setisloading","arr","setarr","signedIn","setSignedIn","then","status","show","fetch","method","response","json","arr1","console","log","arr2","catch","err","finally","view","resp","refine","a1","Array","a2","i","length","push","Math","round","Number","EPSILON","pow","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/Users/Fatima/Documents/GitHub/eeg-app/frontend/eeg-app/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { StyleSheet, Text, View, Button, Stack } from \"react-native\";\r\nimport { Dimensions } from \"react-native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\n\r\nimport {\r\n  LineChart,\r\n  BarChart,\r\n  PieChart,\r\n  ProgressChart,\r\n  ContributionGraph,\r\n  StackedBarChart,\r\n} from \"react-native-chart-kit\";\r\nimport Navigator from \"./stack/appstack\";\r\nimport { accessToken, login, refreshToken } from \"./auth/auth\";\r\nimport \"react-native-gesture-handler\";\r\nimport { isLoggedIn } from \"react-native-axios-jwt\";\r\nimport SignupScreen from \"./screens/signup\";\r\nimport LoginScreen from \"./screens/login\";\r\nimport DataImportScreen from \"./screens/dataimportoptions\";\r\nimport HeadsetScreen from \"./screens/connectheadset\";\r\nimport ImportScreen from \"./screens/importeegdata\";\r\nimport UploadScreen from \"./screens/uploadeeg\";\r\nimport AnalyzeScreen from \"./screens/analyze\";\r\nimport ClassifyScreen from \"./screens/classify\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport PatientHistory from \"./screens/patienthistory\";\r\nimport ReportGeneration from \"./screens/reportgeneration\";\r\nimport AuthContext from \"./auth/authContext\";\r\n\r\n// const show = ()=>{\r\n//   console.log('button clicked');\r\n//   fetch('http://192.168.43.137:3000/view',{method:'GET'})\r\n//   .then((response)=>response.json())\r\n//   .then((response)=>{\r\n//     setdata(response);\r\n//     console.log(data);\r\n//   });\r\n// };\r\nexport default function App() {\r\n  const [data, setdata] = useState({});\r\n  const [firstarr, setfirstarr] = useState([]);\r\n  const [x, setx] = useState([]);\r\n  const [y, sety] = useState([]);\r\n  const [secondarr, setsecondarr] = useState([]);\r\n  const [loading, setisloading] = useState(true);\r\n  const [arr, setarr] = useState([1, 2, 3]);\r\n  const Stack = createStackNavigator();\r\n  const [signedIn, setSignedIn] = useState(true);\r\n\r\n  useEffect(() => {\r\n    isLoggedIn().then((status) => {\r\n      setSignedIn(status);\r\n    });\r\n  }, []);\r\n  const show = async () => {\r\n    // console.log('button clicked');\r\n    await fetch(\"http://192.168.100.171:3000/view\", { method: \"GET\" })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        setdata(response);\r\n        setfirstarr(response[0].arr1);\r\n        console.log(firstarr);\r\n        setsecondarr(response[1].arr2);\r\n\r\n        console.log(secondarr);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .finally(() => {\r\n        setisloading(false);\r\n      });\r\n  };\r\n  const view = async () => {\r\n    try {\r\n      const response = await fetch(\"http://192.168.100.171:3000/view\", {\r\n        method: \"GET\",\r\n      });\r\n      const resp = await response.json();\r\n      setdata(resp);\r\n      setfirstarr(resp[0].arr1);\r\n      console.log(firstarr);\r\n      setsecondarr(resp[1].arr2);\r\n\r\n      console.log(secondarr);\r\n      // console.log(resp[0].arr1);\r\n    } catch (error) {\r\n    } finally {\r\n      setisloading(false);\r\n    }\r\n  };\r\n\r\n  const refine = async () => {\r\n    var a1 = new Array();\r\n    var a2 = new Array();\r\n\r\n    for (var i = 0; i < firstarr.length; i++) {\r\n      // console.log(firstarr[1]);\r\n      a1.push(Math.round((firstarr[i] + Number.EPSILON) * 10000) / 10000);\r\n    }\r\n    setx(a1);\r\n    // console.log(a1);\r\n\r\n    for (var i = 0; i < secondarr.length; i++) {\r\n      //secondarr[i]=secondarr[i]/Math.pow(10,-5);\r\n      // a2.push(Math.round((secondarr[i]+Number.EPSILON)*10000)/10000);\r\n      a2.push(secondarr[i] / Math.pow(10, -12));\r\n    }\r\n    sety(a2);\r\n    // console.log(y);\r\n  };\r\n\r\n  return (\r\n    // <AuthContext.Provider value={{ signedIn, setSignedIn }}>\r\n    //   <NavigationContainer>\r\n    //     {signedIn ? (\r\n    //       <Stack.Navigator>\r\n    //         <Stack.Screen name=\"DataImport\" component={DataImportScreen} />\r\n    //         <Stack.Screen name=\"Headset\" component={HeadsetScreen} />\r\n    //         <Stack.Screen name=\"Import\" component={ImportScreen} />\r\n    //         <Stack.Screen name=\"Upload\" component={UploadScreen} />\r\n    //         <Stack.Screen name=\"Analyze\" component={AnalyzeScreen} />\r\n    //         <Stack.Screen name=\"Classify\" component={ClassifyScreen} />\r\n    //         <Stack.Screen name=\"PatientHistory\" component={PatientHistory} />\r\n    //         <Stack.Screen\r\n    //           name=\"ReportGeneration\"\r\n    //           component={ReportGeneration}\r\n    //         />\r\n    //       </Stack.Navigator>\r\n    //     ) : (\r\n    //       <Stack.Navigator>\r\n    //         <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n    //         <Stack.Screen name=\"Signup\" component={SignupScreen} />\r\n    //       </Stack.Navigator>\r\n    //     )}\r\n    //   </NavigationContainer>\r\n    // </AuthContext.Provider>\r\n    <AnalyzeScreen/>\r\n\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}